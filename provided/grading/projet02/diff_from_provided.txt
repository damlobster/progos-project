test-core.c:
5d4
<  * @author Aurélien Soccard & Jean-Cédric Chappelier


bmblock.h:
7d6
<  * @author Edouard Bugnion
11c10
< #include <stddef.h> // for size_t
---
> #include <stddef.h>
13a13
> #pragma once
19c19,23
<     int unused; // so that it can compile before WEEK 9
---
>     size_t length; // size in words
>     uint64_t cursor; // index of the first not full word
>     uint64_t min; // index of the first bit (included)
>     uint64_t max;// index of the last bit (included)
>     uint64_t bm[1]; // array containing bits
22c26,29
< #define BITS_PER_VECTOR (8*sizeof(((struct bmblock_array*)0)->bm[0]))
---
> // return the number of bytes per word
> #define BYTES_PER_VECTOR (sizeof(((struct bmblock_array*)0)->bm[0]))
> // return the number of bits per word
> #define BITS_PER_VECTOR (8*BYTES_PER_VECTOR)


inode.h:
7d6
<  * @author Edouard Bugnion
17a17,19
> #define INODE_SMALL_FILE 8 * SECTOR_SIZE
> #define INODE_EXTRA_LARGE_FILE 7 * ADDRESSES_PER_SECTOR * SECTOR_SIZE
> 


filev6.h:
7d6
<  * @author Edouard Bugnion
54c53
<  * @param mode the mode of the file
---
>  * @param mode the new offset of the file


unixv6fs.h:
8c8
<  * This file is a revision from Edouard Bugnion of a file created by
---
>  * This file is an revision from Edouard Bugnion of a file created by
19d18
<  * @author original UNIX v6 team + Mendel Rosenblum (Stanford) + Edouard Bugnion
35c34
<  * inodes                | s_inode_start  | s_inode_start+s_isize-1
---
>  * inodes                | s_inode_start  | s_inode_start_s_isize-1
150c149
< // Max. number of sector locations held in an inode
---
> // Max. number of sector locations hold in an inode
202,204c201,209
<     /* TODO WEEK 04:
<      * la première chose à faire est de définir cette structure.
<      */
---
> 	uint16_t i_mode;
> 	uint8_t i_nlink;
> 	uint8_t i_uid;
> 	uint8_t i_gid;
> 	uint8_t i_size0;
> 	uint16_t i_size1;
> 	uint16_t i_addr[ADDR_SMALL_LENGTH];
> 	uint16_t i_atime[2];
> 	uint16_t i_mtime[2];


sha.h:
7d6
<  * @author Aurélien Soccard
28c27
<  * @param inode the inode of which we want to print the content
---
>  * @param inode the inocde of which we want to print the content
31c30
< void print_sha_inode(struct unix_filesystem *u, struct inode inode, int inr);
---
> void print_sha_inode(const struct unix_filesystem *u, struct inode inode, int inr);


direntv6.h:
7d6
<  * @author Edouard Bugnion
20,22c19,20
< struct directory_reader {
<     /* TODO WEEK 06:
<      * définir cette structure.
---
> /**
>  * Helper struct for reading a directory
24c22,26
<     int unused; // so that it can compile before WEEK 6
---
> struct directory_reader {
>     struct filev6 fv6; // the filesystem
>     struct direntv6 dirs[DIRENTRIES_PER_SECTOR]; //the current dir contents chunk
>     uint32_t cur; // the current file/dir
>     uint32_t last; // the last file in the chunk


error.c:
5a6,8
> /**
>  * Texts of error messages
>  */


error.h:
7d6
<  * @author Edouard Bugnion
61a61,65
> #define M_REQUIRE_FS_MOUNTED(u) \
>     do{ \
>         M_REQUIRE_NON_NULL(u); \
>         M_REQUIRE_NON_NULL(u->f); \
>     } while(0)


sector.h:
7d6
<  * @author Edouard Bugnion


mount.h:
7d6
<  * @author Edouard Bugnion
46a46,48
> /*
>  * staff only; students will not have to implement
>  */

